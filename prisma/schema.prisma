// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String   @unique
  password  String
  posts Posts[]
  friends Friends[]
  createdAt DateTime @default(now()) 
}

model Posts {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  image     String 
  content   String
  userId  String @db.ObjectId
  Likes  Likes[]
  user User @relation(fields: [userId], references: [id])
  comments Comments[]
  createdAt DateTime @default(now())
}

model Comments {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  postId    String @db.ObjectId
  post Posts @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
}
model Friends {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  userId    String @db.ObjectId
  friendId  String @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Likes {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId @unique
  postId    String @db.ObjectId 
  post Posts @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
}

